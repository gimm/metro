// Text
@mixin line-height($size: 1.4rem)
{
    font-size: $size;
}

@mixin line-height($size: 1.4rem)
{
    line-height: $size;
}

@mixin font-height($size: 1.4rem)
{
    @include font-size($size);
    @include line-height($size);
}

// Colors function
@mixin set-bg-color($color: transparent)
{background-color: $color !important;}
@mixin set-fg-color($color: transparent)
{color: $color !important;}
@mixin set-ol-color($color: transparent)
{outline-color: $color !important;}
@mixin set-bd-color($color: transparent)
{border-color: $color !important;}

@mixin ribbed($color: $white, $angle: -45deg, $size: 40px)
{
    background-color: $color !important;
    background-image: -webkit-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -ms-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255,255,255,.15) 25%, transparent 25%, transparent 50%, rgba(255,255,255,.15) 50%, rgba(255,255,255,.15) 75%, transparent 75%, transparent);
    background-size: $size $size;
}

// Box
@mixin size($height, $width)
{
    width: $width;
    height: $height;
}

@mixin square($size)
{
    @include size($size, $size);
}

@mixin box-sizing($type)
{
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    -ms-box-sizing: $type;
    -o-box-sizing: $type;
    box-sizing: $type;
}

@mixin collapse($collapce)
{
    border-collapse: $collapce;
}

// Columns
@mixin column-gap($gap)
{
    -moz-column-gap: $gap;
    -webkit-column-gap: $gap;
    -o-column-gap: $gap;
    -ms-column-gap: $gap;
    column-gap: $gap;
}

@mixin columns($columns)
{
    -moz-columns: $columns;
    -webkit-columns: $columns;
    -o-columns: $columns;
    -ms-columns: $columns;
    columns: $columns;
    @include column-gap($unitSize);
}

// Grid functions
@mixin spanX($index)
{
    width: $gridColumnSize * $index + $gridGutterSize * ($index - 1) !important;
}
@mixin offsetX($index)
{
    margin-left: $gridColumnSize * $index + ($gridGutterSize * ($index));
    &:not(:first-child){
        margin-left: $gridColumnSize * $index + ($gridGutterSize * ($index + 1));
    }
}

@mixin fluid-spanX($index)
{
    width: $gridColumnSizeFluid * $index + ($gridGutterSizeFluid * ($index - 1)) !important;
}
@mixin fluid-offsetX($index)
{
    margin-left: $gridColumnSizeFluid * $index + ($gridGutterSizeFluid * ($index));
    &:not(:first-child){
        margin-left: $gridColumnSizeFluid * $index + ($gridGutterSizeFluid * ($index + 1));
    }
}

// Transform functions
@mixin rotate($degrees)
{
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}
@mixin rotateX($degrees)
{
    -webkit-transform: rotateX($degrees);
    -moz-transform: rotateX($degrees);
    -ms-transform: rotateX($degrees);
    -o-transform: rotateX($degrees);
    transform: rotateX($degrees);
}
@mixin rotateY($degrees)
{
    -webkit-transform: rotateY($degrees);
    -moz-transform: rotateY($degrees);
    -ms-transform: rotateY($degrees);
    -o-transform: rotateY($degrees);
    transform: rotateY($degrees);
}
@mixin rotateZ($degrees)
{
    -webkit-transform: rotateZ($degrees);
    -moz-transform: rotateZ($degrees);
    -ms-transform: rotateZ($degrees);
    -o-transform: rotateZ($degrees);
    transform: rotateZ($degrees);
}
@mixin scale($ratio)
{
    -webkit-transform: scale($ratio);
    -moz-transform: scale($ratio);
    -ms-transform: scale($ratio);
    -o-transform: scale($ratio);
    transform: scale($ratio);
}
@mixin scaleX($ratio)
{
    -webkit-transform: scaleX($ratio);
    -moz-transform: scaleX($ratio);
    -ms-transform: scaleX($ratio);
    -o-transform: scaleX($ratio);
    transform: scaleX($ratio);
}
@mixin scaleY($ratio)
{
    -webkit-transform: scaleY($ratio);
    -moz-transform: scaleY($ratio);
    -ms-transform: scaleY($ratio);
    -o-transform: scaleY($ratio);
    transform: scaleY($ratio);
}
@mixin translate($x: 0, $y: 0)
{
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}
@mixin skew($x: 0, $y: 0)
{
    -webkit-transform: skew($x, $y);
    -moz-transform: skew($x, $y);
    -ms-transform: skew($x, $y);
    -o-transform: skew($x, $y);
    transform: skew($x, $y);
}
@mixin translate3d($x: 0, $y: 0, $z: 0)
{
    -webkit-transform: translate($x, $y, $z);
    -moz-transform: translate($x, $y, $z);
    -ms-transform: translate($x, $y, $z);
    -o-transform: translate($x, $y, $z);
    transform: translate($x, $y, $z);
}

@mixin transformOrigin($origin)
{
    -webkit-transform-origin: $origin;
    -moz-transform-origin: $origin;
    -ms-transform-origin: $origin;
    -o-transform-origin: $origin;
    transform-origin: $origin;
}

